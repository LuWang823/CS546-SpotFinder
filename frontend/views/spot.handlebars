<main>
    <!--TODO: add a like button, backend needs to be done FIRST!-->
    <img src="{{image_src}}" class="spot-img">
    <div class="spot-info">
        <h2>{{spotName}}</h2>
        <h5>{{tagList}}</h5>
        <span>{{spotCoordinates}}</span>
        <p>{{spotDescription}}</p>
        <div class="likes">
            <span>{{likesCount}}</span>
        </div>
    </div>
    <ul><!--should pass in an array of objects of all the reviews, not just the review IDs!!!-->
        <li>
            <p id="error-message"></p>
            <form id="new-review">
                <label for="rating">Rating: </label>
                <input type="number" min="1" max="5" id="rating" name="rating">
                <label for="description">Review: </label>
                <input type="text" id="description" name="description">
                <input type="submit" id="submit" name="submit">
            </form>
        </li>
        {{#each review}}
        <li>
            <div style="display:flex">
                <h4>{{this.user}}</h4>
                <span>{{this.timestamp}}</span>
                <span>{{this.ratings}}</span>
            </div>
            <p>{{this.description}}</p>
        </li>
        {{/each}}
    </ul>
</main>

<script>
    document.getElementById('new-review').addEventListener('submit', async function (event) {
        event.preventDefault();//obliterate default behavior
        
        const description = document.getElementById('description').value;
        const rating = document.getElementById('rating').value;

        //TODO: validation on these fields ^^

        const user = localStorage.getItem('accessToken')//use this access token in link
        const refresh = localStorage.getItem('refreshToken')//use this refresh token in link

        try {
            //username and timestamp for review object gets populated on backend route, not front end responsibility, use access token to find user..
            await postReview();
            errorMessage.textContent = 'successfully posted!';
            errorMessage.style.display = 'block';
        } catch (e) {
            errorMessage.textContent = e.message;
            errorMessage.style.display = 'block';
        }
    });
</script>