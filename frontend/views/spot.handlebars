<main>
    <!--TODO: add a like button, backend needs to be done FIRST!-->
    <img src="{{image_src}}" class="spot-img" alt="Image of the spot">
    <div class="spot-info">
        <h2>Name: {{spotName}}</h2>
        <h5>Tags: {{tagList}}</h5>
        <p>Coordinates: {{spotCoordinates}}</p>
        <p>Description: {{spotDescription}}</p>
        <div class="likes">
            <span>Likes: {{likesCount}}</span>
        </div>
    </div>
    <ul><!--should pass in an array of objects of all the reviews, not just the review IDs!!!-->
        <li id="review">
            <h4>write your own review: </h4>
            <p id="error-message"></p>
            <form id="new-review">
                <label for="rating">Rating: </label>
                <input type="number" min="1" max="5" id="rating" name="rating">
                <label for="description">Review: </label>
                <input type="text" id="description" name="description">
                <input type="submit" id="submit" name="submit">
            </form>
        </li>
        {{#each review}}
        <li>
            <div>
                <h4>User: {{this.user}}</h4>
                <p>Time: {{this.timestamp}}</p>
                <p>Rating (1-5): {{this.ratings}}</p>
            </div>
            <p>Review: {{this.description}}</p>
        </li>
        {{/each}}
    </ul>
</main>

<script>
    if (localStorage.getItem('accessToken') === null) {
        document.getElementById('review').style.display = 'none';
    } else {
        document.getElementById('new-review').addEventListener('submit', async function (event) {
            event.preventDefault();//obliterate default behavior

            const description = document.getElementById('description').value;
            const rating = document.getElementById('rating').value;

            //TODO: validation on these fields ^^

            const user = localStorage.getItem('accessToken')//use this access token in link
            const refresh = localStorage.getItem('refreshToken')//use this refresh token in link

            const urlParams = new URLSearchParams(window.location.search);
            const id = urlParams.get('id'); //get spot id from url
            try {
                //username and timestamp for review object gets populated on backend route, not front end responsibility, use access token to find user..
                await postReview(id,rating,description);
                errorMessage.textContent = 'successfully posted!';
                errorMessage.style.display = 'block';
            } catch (e) {
                errorMessage.textContent = e.message;
                errorMessage.style.display = 'block';
            }
        });
    }
</script>