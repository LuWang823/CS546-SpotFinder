<main>
    <img src="{{image_src}}" class="spot-img" alt="Image of the spot">
    <div class="spot-info">
        <h2>Name: {{spotName}}</h2>
        <h5>Tags: {{tagList}}</h5>
        <p>Coordinates: {{spotCoordinates}}</p>
        <p>Description: {{spotDescription}}</p>
        <div class="likes">
            <span>Likes: {{likesCount}}</span>
        </div>
        <button onclick="like()">Like This Spot</button>
        <button onclick="save()">Save This Spot</button>

    </div>
    <button id="refresh-reviews">Refresh Reviews</button>
    <ul class="review-list"><!--should pass in an array of objects of all the reviews, not just the review IDs!!!-->
        <li id="review">
            <h4>write your own review: </h4>
            <p id="error-message"></p>
            <form id="new-review">
                <label for="rating">Rating: </label>
                <input type="number" min="1" max="5" id="rating" name="rating">
                <label for="description">Review: </label>
                <input type="text" id="description" name="description">
                <input type="submit" id="submit" name="submit">
            </form>
        </li>
        {{#each review}}
        <li>
            <div>
                <h4>User: {{this.user}}</h4>
                <p>Time: {{this.timestamp}}</p>
                <p>Rating (1-5): {{this.ratings}}</p>
            </div>
            <p>Review: {{this.description}}</p>
        </li>
        {{/each}}
    </ul>
</main>
<script src="/scripts/postReview.js"></script>
<script src="/scripts/likeSpot.js"></script>
<script src="/scripts/saveSpot.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>//ajax for refreshing review list
    $(document).ready(() => {
        // Refresh reviews when the button is clicked
        $('#refresh-reviews').click(() => {
            const currentUrl = window.location.pathname;
            const spotId = currentUrl.split('/')[2]; // Extract spot ID from URL
            const apiUrl = `http://localhost:3000/api/v1/reviews/spots/${spotId}`;
            $.ajax({
                url: apiUrl,
                method: 'GET',
                success: (data) => {
                    data = data.data;
                    // Clear the current list
                    $('.review-list').empty();

                    // Append the updated reviews
                    data.forEach((review) => {
                        $('.review-list').append(`
                            <li>
                                <div>
                                    <h4>User: ${review.user}</h4>
                                    <p>Time: ${review.timestamp}</p>
                                    <p>Rating (1-5): ${review.ratings}</p>
                                </div>
                                <p>Review: ${review.description}</p>
                            </li>
                        `);
                    });
                },
                error: (err) => {
                    console.error('Error fetching reviews:', err);
                    alert('Could not refresh reviews. Please try again later.');
                },
            });
        });
    });
</script>
<script> //handle submitting a new review
    if (localStorage.getItem('accessToken') === null) {
        document.getElementById('review').style.display = 'none';
    } else {    //handle making a post request, check inputs, call function in postReview file
        document.getElementById('new-review').addEventListener('submit', async function (event) {
            event.preventDefault();//obliterate default behavior

            let description = document.getElementById('description').value;
            const rating = Number(document.getElementById('rating').value);
            const errorMessage = document.getElementById('error-message');

            if (!rating || typeof rating !== 'number' || rating < 1 || rating > 5) {
                errorMessage.textContent = 'invalid rating';
                errorMessage.style.display = 'block';
                return;
            }
            if (!description ||
                typeof description !== "string" ||
                description.trim().length < 1 || description.trim().length > 500) {
                errorMessage.textContent = 'invalid description';
                errorMessage.style.display = 'block';
                return;
            } else {
                description = description.trim();
            }

            const user = localStorage.getItem('accessToken')//use this access token in header
            const refresh = localStorage.getItem('refreshToken')//use this refresh token in header

            const currentUrl = window.location.pathname;
            // Split the path to get the ID
            const id = currentUrl.split('/')[2]; // spot id from current url
            try {
                //username and timestamp for review object gets populated on backend route, not front end responsibility, use access token to find user..
                await postReview(id, rating, description);
                errorMessage.textContent = 'successfully posted!';
                errorMessage.style.display = 'block';
                const currentUrl = window.location.pathname;
            const spotId = currentUrl.split('/')[2]; // Extract spot ID from URL
            const apiUrl = `/spots/${spotId}/reviews`;
            $.ajax({
                url: apiUrl,
                method: 'GET',
                success: (data) => {
                    // Clear the current list
                    $('.review-list').empty();

                    // Append the updated reviews
                    data.forEach((review) => {
                        $('.review-list').append(`
                            <li>
                                <div>
                                    <h4>User: ${review.user}</h4>
                                    <p>Time: ${review.timestamp}</p>
                                    <p>Rating (1-5): ${review.ratings}</p>
                                </div>
                                <p>Review: ${review.description}</p>
                            </li>
                        `);
                    });
                },
                error: (err) => {
                    console.error('Error fetching reviews:', err);
                    alert('Could not refresh reviews. Please try again later.');
                },
            });
            } catch (e) {
                errorMessage.textContent = e.message;
                errorMessage.style.display = 'block';
            }
        });
    }
</script>